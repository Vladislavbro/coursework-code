import json

# Загружаем примеры для примера формата (например, из wikiann_20.json)
with open("data/wikiann_18.json", "r", encoding="utf-8") as f:
    all_examples = json.load(f)
example_json = all_examples[:10]  # количество примеров для краткости промпта

# Загружаем тексты для аннотации из wikiann_100.json 
with open("data/wikiann_100.json", "r", encoding="utf-8") as f:
    all_texts = json.load(f)
texts_to_annotate = [item["text"] for item in all_texts[:8]] 

prompt = f"""
Тебе будет предоставлен список текстов. Твоя задача — извлечь из каждого текста именованные сущности (людей - PER, организации - ORG, локации - LOC).
Ты ДОЛЖЕН вернуть результат в виде списка JSON-объектов. Каждый JSON-объект в списке должен соответствовать одному входному тексту и иметь два ключа:
1.  `"text"`: оригинальный текст.
2.  `"entities"`: список JSON-объектов, где каждый объект представляет найденную сущность и имеет ключи `"text"` (текст сущности) и `"label"` (тип сущности: PER, ORG или LOC).

ВАЖНО: Твой ответ должен быть СТРОГО в формате JSON, точно как в примере ниже. Не добавляй никаких объяснений, комментариев или какого-либо другого текста вне JSON-структуры.

Пример формата вывода (это ТОЛЬКО пример структуры, не используй эти данные для реальных текстов):
{json.dumps(example_json, ensure_ascii=False, indent=2)}

В тексте всегда есть как минимум 1 тип сущности, если ты его не нашел с первого раза, проверь еще раз.

Тексты для разметки:
{json.dumps(texts_to_annotate, ensure_ascii=False, indent=2)}

Пожалуйста, верни ТОЛЬКО JSON-массив с результатами разметки для КАЖДОГО из предоставленных текстов. Не генерируй Python-код или какой-либо другой текст.
"""